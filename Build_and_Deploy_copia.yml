name: Mango App

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  #AZURE_WEBAPP_NAME: mango-web-app
  #AZURE_WEBAPP_PACKAGE_PATH: "./Mango.Web/publish"
  DOTNET_VERSION: "9.x"
  SOLUTION_PATH: "Mango.sln"
  #APP_PROJECT_PATH: "Mango.Web"
  PUBLISH_DIR: "./publish"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.isWebAppChanged.outputs.value }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3

        id: filter
        with:
          filters: |
            mango_web_app:
              - 'Mango.Web/**'
            mango_auth_api:
              - 'Mango.Services.AuthAPI/**'
            mango_coupon_api:
              - 'Mango.Services.CouponAPI/**'
            mango_product_api:
              - 'Mango.Services.ProductAPI/**'
            mango_shopping_cart_api:
              - 'Mango.Services.ShoppingCartAPI/**'

###Esto es comÃºn para todos los despliegues
#      - name: Setup .NET
#        uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: ${{ env.DOTNET_VERSION }}

#      - name: Restore
#        run: dotnet restore ${{ env.SOLUTION_PATH }}

#      - name: Build
#        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

#      - name: Test
#        run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-restore --no-build --verbosity normal
              

###Web App
      - name: Web App steps start here
        id: isWebAppChanged
        if: steps.filter.outputs.mango_web_app == 'true'
        env:
          AZURE_WEBAPP_NAME: mango-web-app
          AZURE_WEBAPP_PACKAGE_PATH: "./Mango.Web/publish"
          APP_PROJECT_PATH: "Mango.Web"        
        run: |
            cd Mango.Web
            echo 'Cambios en Web App.'
            echo 'value=true' >> "$GITHUB_OUTPUT"

###Auth API
      - name: Auth API steps start here
        if: steps.filter.outputs.mango_auth_api == 'true'
        env:
          AZURE_WEBAPP_NAME: mango-auth-api
          AZURE_WEBAPP_PACKAGE_PATH: "./Mango.Services.AuthAPI/publish"
          APP_PROJECT_PATH: "Mango.Services.AuthAPI"        
        run: |
            cd Mango.Services.AuthAPI
            echo 'Cambios en Auth API'

###Coupon API
      - name: Coupon API steps start here
        if: steps.filter.outputs.mango_product_api == 'true'
        env:
          AZURE_WEBAPP_NAME: mango-coupon-api
          AZURE_WEBAPP_PACKAGE_PATH: "./Mango.Services.CouponAPI/publish"
          APP_PROJECT_PATH: "Mango.Services.CouponAPI"      
        run: |
            cd Mango.Services.CouponAPI
            echo 'Cambios en Coupon API'      

###Product API
      - name: Product API steps start here
        if: steps.filter.outputs.mango_product_api == 'true'
        env:
          AZURE_WEBAPP_NAME: mango-product-api
          AZURE_WEBAPP_PACKAGE_PATH: "./Mango.Services.ProductAPI/publish"
          APP_PROJECT_PATH: "Mango.Services.ProductAPI"     
        run: |
            cd Mango.Services.ProductAPI
            echo 'Cambios en Product API'       

###Shopping Cart API
      - name: Shopping Cart API steps start here
        if: steps.filter.outputs.mango_shopping_cart_api == 'true'
        env:
          AZURE_WEBAPP_NAME: mango-shopping-cart-api
          AZURE_WEBAPP_PACKAGE_PATH: "./Mango.Services.ShoppingCartAPI/publish"
          APP_PROJECT_PATH: "Mango.Services.ShoppingCartAPI"
        run: |
            cd Mango.Services.ShoppingCartAPI
            echo 'Cambios en Shopping Cart API'          

      - name: Publish Web App
        if: steps.isWebAppChanged.outputs.value == 'true'
        run: echo ${{ steps.isWebAppChanged.outputs.value }}



      - name: Publish
        run: dotnet publish ${{ env.APP_PROJECT_PATH }} --configuration Release --no-restore --no-build --property:PublishDir=${{ env.PUBLISH_DIR }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          
  deploy:
    name: Deploy Web App to Azure 
    runs-on: ubuntu-latest
    needs: [buid-and-test]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          
      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"